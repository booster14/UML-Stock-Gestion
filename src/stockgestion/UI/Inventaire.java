/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package stockgestion.UI;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.table.DefaultTableModel;
import java.util.List;
import javax.swing.JMenuItem;
import javax.swing.JPopupMenu;
import javax.swing.ListSelectionModel;
import stockgestion.Controlleur.ArticleControlleur;
import stockgestion.Entite.*;

/**
 *
 * @author rubeus
 */
public class Inventaire extends javax.swing.JFrame {
    private static Inventaire instance = null;
    private List<Article> listArticles;

    private Inventaire() {
        initComponents();
        addActionListeners();
        setTitle("Inventaire");
    }
    
    public static Inventaire getInstance(){
        if(instance == null){
            instance = new Inventaire();
        }
        return instance;
    }
    
    private void addActionListeners(){
        back.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
                InterfaceUtilisateur.getInstance().retournerEcranAccueil(Inventaire.this);
            }
        });
        
        menuItemAjouterArticle.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
                Inventaire.this.setVisible(false);
                AjouterArticle.getInstance().setVisible(true);
                AjouterArticle.getInstance().setPreviousWindow(Inventaire.this);
            }
        });
        
        table.setSelectionMode(ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        JPopupMenu popupMenu = new JPopupMenu();
        JMenuItem deleteItem = new JMenuItem("Supprimer");
        JMenuItem viewItem = new JMenuItem("Consulter l'article");
        popupMenu.add(deleteItem);
        popupMenu.add(viewItem);
        table.setComponentPopupMenu(popupMenu);        
        deleteItem.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
                int[] indexes = table.getSelectedRows();
                for(int i=indexes.length-1; i>=0; i--){
                    ArticleControlleur.getInstance().supprimer(listArticles.get(indexes[i]));
                    listArticles.remove(indexes[i]);
                }
                refreshTable(listArticles);
            }
        });  
        viewItem.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
                Inventaire.this.setVisible(false);
                ViewArticle.getInstance().viewArticleMode(listArticles.get(table.getSelectedRow()));
                ViewArticle.getInstance().setVisible(true);
            }
        });
        
        menuItemImprimer.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
                Imprimer i = Imprimer.getInstance();
                i.newPage("Inventaire");
                
                for(Article article : listArticles){
                    i.println("Nom d'article: "+article.getNom());
                    i.println("Code barre: "+article.getCodeBarre());
                    i.println("Prix unitaire: "+article.getPrix());
                    i.println("Quantité en stock: "+article.getQuantite());
                    i.println("Fournisseurs: "+article.listFournisseurToString());
                    i.println("Seuil de réassortiment: "+article.getSeuilDeReassortiment());
                    i.println("Type de vente: "+ (article.isTypeDeVente()?"poids":"unité") );
                    i.println("");
                }
            }
        });
    }
    
    public void refreshTable(List<Article> listArticles){
        this.listArticles = listArticles;
        DefaultTableModel tableModel = (DefaultTableModel) table.getModel();
        tableModel.setRowCount(0);
        for(Article article: listArticles){
            tableModel.addRow(new Object[] {article.getNom(), article.getQuantite(), article.listFournisseurToString(), article.getPrix()});
        }
        table.setModel(tableModel);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        back = new javax.swing.JButton();
        explain = new javax.swing.JLabel();
        menuBar = new javax.swing.JMenuBar();
        menu = new javax.swing.JMenu();
        menuItemImprimer = new javax.swing.JMenuItem();
        menuItemAjouterArticle = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nom", "Quantite", "Fournisseur", "Prix unitaire"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(table);

        back.setText("Retouner à l'écran d'accueil");

        explain.setText("Multi-sélection: Ctrl/Maj + clic gauche");

        menu.setText("Options");

        menuItemImprimer.setText("Imprimer la page");
        menu.add(menuItemImprimer);

        menuItemAjouterArticle.setText("Ajouter un article");
        menu.add(menuItemAjouterArticle);

        menuBar.add(menu);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 800, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(292, 292, 292)
                        .addComponent(back, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(273, 273, 273)
                        .addComponent(explain)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 473, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(explain, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(back, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton back;
    private javax.swing.JLabel explain;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JMenu menu;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenuItem menuItemAjouterArticle;
    private javax.swing.JMenuItem menuItemImprimer;
    private javax.swing.JTable table;
    // End of variables declaration//GEN-END:variables
}
